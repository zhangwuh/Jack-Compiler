function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto IF_0
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
goto ENDIF_0
label IF_0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
label ENDIF_0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto IF_1
push this 4
push this 6
add
pop this 4
push this 9
if-goto IF_2
push this 7
if-goto IF_3
push this 1
push constant 4
sub
pop this 1
goto ENDIF_3
label IF_3
push this 0
push constant 4
sub
pop this 0
label ENDIF_3
goto ENDIF_2
label IF_2
push this 7
if-goto IF_4
push this 1
push constant 4
add
pop this 1
goto ENDIF_4
label IF_4
push this 0
push constant 4
add
pop this 0
label ENDIF_4
label ENDIF_2
goto ENDIF_1
label IF_1
push this 4
push this 5
add
pop this 4
label ENDIF_1
push this 8
if-goto IF_5
push this 7
if-goto IF_6
push this 0
push constant 4
sub
pop this 0
goto ENDIF_6
label IF_6
push this 1
push constant 4
sub
pop this 1
label ENDIF_6
goto ENDIF_5
label IF_5
push this 7
if-goto IF_7
push this 0
push constant 4
add
pop this 0
goto ENDIF_7
label IF_7
push this 1
push constant 4
add
pop this 1
label ENDIF_7
label ENDIF_5
push this 0
push this 10
gt
not
if-goto IF_8
goto ENDIF_8
label IF_8
push constant 1
pop this 14
push this 10
pop this 0
label ENDIF_8
push this 0
push this 11
lt
not
if-goto IF_9
goto ENDIF_9
label IF_9
push constant 2
pop this 14
push this 11
pop this 0
label ENDIF_9
push this 1
push this 12
gt
not
if-goto IF_10
goto ENDIF_10
label IF_10
push constant 3
pop this 14
push this 12
pop this 1
label ENDIF_10
push this 1
push this 13
lt
not
if-goto IF_11
goto ENDIF_11
label IF_11
push constant 4
pop this 14
push this 13
pop this 1
label ENDIF_11
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto IF_12
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto IF_13
push constant 5
pop local 4
goto ENDIF_13
label IF_13
push constant 20
pop local 4
label ENDIF_13
goto ENDIF_12
label IF_12
push constant 10
pop local 4
label ENDIF_12
push this 14
push constant 1
eq
if-goto IF_14
push this 14
push constant 2
eq
if-goto IF_15
push this 14
push constant 3
eq
if-goto IF_16
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto ENDIF_16
label IF_16
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label ENDIF_16
goto ENDIF_15
label IF_15
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
label ENDIF_15
goto ENDIF_14
label IF_14
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
label ENDIF_14
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return